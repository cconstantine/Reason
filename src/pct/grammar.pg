# $Id$

=begin overview

This is the grammar for Reason written as a sequence of Perl 6 rules.

=end overview

grammar Reason::Grammar is PCT::Grammar;

rule TOP {
    {*}                                          #= begin
    <statement>*
    [ $ || <panic: 'Syntax error'> ]
    {*}                                          #= end
}

##  this <ws> rule treats # as "comment to eol"
token ws {
    <!ww>
    [ ';' \N* \n? | \s+ ]*
}

rule statement {
    '('
    [
	| <cons> {*}
##        | <special> {*}                          #= special
##        | <simple> {*}                           #= simple
    ]
    ')'
}

token special {
    | <if> {*}                                   #= if
    | <define> {*}                               #= define
    | <let> {*}                                  #= let
    | <fn> {*}      	                         #= fn
    | <library> {*}                              #= library
    | <export> {*}                               #= export
    | <import> {*}                               #= import
    | <hllimport> {*}                            #= hllimport
    | <tcall> {*} 				 #= tcall
}

rule if {
    'if'
    <cond=term>
    <iftrue=term>
    <iffalse=term>
    {*}
}

rule define {
    'define'
    <var=symbol>
    <val=term>
    {*}
}

rule let {
    'let' {*}					#= begin
    '('
    [
        '('
        <var=symbol> {*}  #= var
        <val=term>   {*}  #= val
        ')'
    ]+
    ')'
    <statement>+
    {*}                                          #= end
}

rule fn {
    'fn'
    '('
    [
        <var=symbol>
    ]*
    ')' {*}                                      #= begin
    <statement>+
    {*}                                          #= end
}

rule library {
    'library'
    '('
    [<ns=ident> ]+
    ')' {*}                                      #= begin
    <statement>+
    {*}                                          #= end
}

rule export {
    'export'
    <sym=ident>
    {*}
}

rule import {
    'import'
    $<libs>=('('
    [<ns=ident> ]+
    ')' )+
    {*}
}

rule hllimport {
    'hllimport'
    $<libs>=('('
    <hll=ident> [<ns=ident> ]+
    ')' )+
    {*}
}

rule simple {
    <cmd=term>
    [<term> ]*
    {*}
}

rule cons {
    [<term> ]* {*}
}
rule tcall {
     '^' <cmd=term> [<term> ]* {*}
}

rule value {
    | <integer> {*}                              #= integer
    | <quote> {*}                                #= quote
}

token integer { \d+ {*} }

token quote {
    [ \' <string_literal: '\'' > \' | \" <string_literal: '"' > \" ]
    {*}
}

##  terms
token term {
    | <value> {*}                                #= value
    | <symbol> {*}                               #= symbol
    | <statement> {*}                            #= statement
}

token symbol {
    <symbol=ident> {*}
}

token ident {
    [<!before <[()]>> \S]+
}
